@page
@using MySql.Data.MySqlClient
@{
    // Instancia de la clase de conexión
    var conexion = new ConexionMySQL();
    var pacientes = new List<dynamic>();

    // Capturamos las fechas ingresadas
    string startDate = Request.Query["startDate"];
    string endDate = Request.Query["endDate"];

    // Lógica para conectar a la base de datos y obtener los pacientes
    using (var connection = conexion.AbrirConexion())
    {
        if (connection.State == System.Data.ConnectionState.Open)
        {
            // Consulta para obtener los pacientes atendidos en el rango de fechas
            string query = @"
            SELECT
                p.n_carnet,
                p.nombre,
                p.telefono,
                COUNT(DISTINCT c.id_cita) AS total_citas,
                COUNT(DISTINCT pr.id_procedimiento) AS total_procedimientos
            FROM
                Pacientes p
            LEFT JOIN
                Cita c ON p.n_carnet = c.paciente AND c.fecha_hora BETWEEN @startDate AND @endDate
            LEFT JOIN
                Procedimiento pr ON p.n_carnet = pr.paciente AND pr.fecha_hora BETWEEN @startDate AND @endDate
            WHERE
                (c.fecha_hora BETWEEN @startDate AND @endDate OR pr.fecha_hora BETWEEN @startDate AND @endDate)
            GROUP BY
                p.n_carnet, p.nombre, p.telefono;";

            using (var command = new MySqlCommand(query, connection))
            {
                // Agregar los parámetros de fechas
                command.Parameters.AddWithValue("@startDate", startDate);
                command.Parameters.AddWithValue("@endDate", endDate);

                using (var reader = command.ExecuteReader())
                {
                    while (reader.Read())
                    {
                        // Solo se añaden pacientes que han sido atendidos dentro del rango
                        if (reader.GetInt32("total_citas") > 0 || reader.GetInt32("total_procedimientos") > 0)
                        {
                            pacientes.Add(new
                            {
                                Id = reader.GetInt32("n_carnet"),
                                Nombre = reader.GetString("nombre"),
                                Telefono = reader.GetString("telefono"),
                                TotalCitas = reader.GetInt32("total_citas"),
                                TotalProcedimientos = reader.GetInt32("total_procedimientos")
                            });
                        }
                    }
                }
            }
        }

        // Cerramos la conexión
        conexion.CerrarConexion(connection);
    }
}

<h2>Pacientes Atendidos</h2>

<form method="get">
    <label for="startDate">Fecha Inicio:</label>
    <input type="date" id="startDate" name="startDate" required />

    <label for="endDate">Fecha Fin:</label>
    <input type="date" id="endDate" name="endDate" required />

    <button type="submit">Consultar</button>
</form>

<div class="table-section">
    <p>Listado de Pacientes Atendidos</p>
    <div class="grid-table">
        <!-- Cabeceras -->
        <div class="grid-header">Id</div>
        <div class="grid-header">Nombre</div>
        <div class="grid-header">Telefono</div>
        <div class="grid-header">Total Citas</div>
        <div class="grid-header">Total Procedimientos</div>
        <!-- Datos -->
        @if (pacientes.Count == 0)
        {
            <div class="grid-item" colspan="5">No se encontraron pacientes atendidos en este rango de fechas.</div>
        }
        else
        {
            foreach (var paciente in pacientes)
            {
                <div class="grid-item">@paciente.Id</div>
                <div class="grid-item">@paciente.Nombre</div>
                <div class="grid-item">@paciente.Telefono</div>
                <div class="grid-item">@paciente.TotalCitas</div>
                <div class="grid-item">@paciente.TotalProcedimientos</div>
            }
        }
    </div>
</div>
<style>
    .grid-table {
        display: grid;
        grid-template-columns: repeat(5, 1fr);
        gap: 10px;
        background-color: #f8f8f8;
        padding: 10px;
    }

    .grid-header {
        font-weight: bold;
        background-color: #e2e2e2;
        padding: 10px;
        border-bottom: 2px solid #ccc;
    }

    .grid-item {
        padding: 10px;
        border-bottom: 1px solid #ccc;
    }
</style>