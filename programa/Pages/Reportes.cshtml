@page
@using MySql.Data.MySqlClient
@{
    // Instancia de la clase de conexión
    var conexion = new ConexionMySQL();
    
    // Lista para almacenar los medicamentos utilizados
    var medicamentosUtilizados = new List<dynamic>();
    
    // Lista para almacenar los padecimientos por año
    var padecimientosPorAno = new List<dynamic>();

    // Lista para almacenar los datos de Atenciones por Personal Médico
    var atencionesPorPersonal = new List<dynamic>();

    // Lista para almacenar los padecimientos por año
    var pacientesInformacion = new List<dynamic>();

    // Lógica para conectar a la base de datos y obtener los datos de la vista de medicamentos
    using (var connection = conexion.AbrirConexion())
    {
        if (connection.State == System.Data.ConnectionState.Open)
        {
            // Consulta para Medicamentos Utilizados
            string queryMedicamentos = "SELECT medicamento, anio, mes, total_cantidad_utilizada FROM MedicamentosUtilizadosPorMesAnio";
            using (var command = new MySqlCommand(queryMedicamentos, connection))
            {
                using (var reader = command.ExecuteReader())
                {
                    while (reader.Read())
                    {
                        medicamentosUtilizados.Add(new
                        {
                            Medicamento = reader.GetString("medicamento"),
                            Anio = reader.GetInt32("anio"),
                            Mes = reader.GetInt32("mes"),
                            TotalCantidadUtilizada = reader.GetInt32("total_cantidad_utilizada")
                        });
                    }
                }
            }

            // Consulta para Informe Padecimientos por Año
            string queryPadecimientos = "SELECT nombre_padecimiento, año, cantidad_personas FROM InformePadecimientosPorAno";
            using (var command = new MySqlCommand(queryPadecimientos, connection))
            {
                using (var reader = command.ExecuteReader())
                {
                    while (reader.Read())
                    {
                        padecimientosPorAno.Add(new
                        {
                            Padecimiento = reader.GetString("nombre_padecimiento"),
                            Anio = reader.GetInt32("año"),
                            CantidadPersonas = reader.GetInt32("cantidad_personas")
                        });
                    }
                }
            }

            

            // Consulta para Informe Atenciones por Personal
            string queryAtenciones = "SELECT personal_medico, nombre_medico, total_citas, total_procedimientos, total_medicamentos FROM InformeAtencionesPorPersonal";
            using (var command = new MySqlCommand(queryAtenciones, connection))
            {
                using (var reader = command.ExecuteReader())
                {
                    while (reader.Read())
                    {
                        atencionesPorPersonal.Add(new
                        {
                            PersonalMedico = reader.GetInt32("personal_medico"),
                            NombreMedico = reader.GetString("nombre_medico"),
                            TotalCitas = reader.GetInt32("total_citas"), // Asegúrate de que esta columna es INT
                            TotalProcedimientos = reader.GetInt32("total_procedimientos"), // Asegúrate de que esta columna es INT
                            TotalMedicamentos = reader.GetInt32("total_medicamentos") // Asegúrate de que esta columna es INT
                        });
                    }
                }
            }


            // Consulta para Informe Pacientes
            string queryPacientes = "SELECT n_carnet, nombre, apellido1, apellido2, telefono, correo, sexo, cantidad_padecimientos, cantidad_citas_procedimientos, cantidad_medicamentos, fecha_ultima_cita FROM InformePacientes";
            using (var command = new MySqlCommand(queryPacientes, connection))
            {
                using (var reader = command.ExecuteReader())
                {
                    while (reader.Read())
                    {
                        pacientesInformacion.Add(new
                        {
                            Carnet = reader.GetInt32("n_carnet"), // Asegúrate de que esta columna es INT
                            Nombre = reader.GetString("nombre"),
                            Apellido1 = reader.GetString("apellido1"),
                            Apellido2 = reader.IsDBNull(reader.GetOrdinal("apellido2")) ? null : reader.GetString("apellido2"),
                            Telefono = reader.GetString("telefono"),
                            Correo = reader.IsDBNull(reader.GetOrdinal("correo")) ? null : reader.GetString("correo"),
                            Sexo = reader.IsDBNull(reader.GetOrdinal("sexo")) ? null : reader.GetString("sexo"),
                            CantidadPadecimientos = reader.IsDBNull(reader.GetOrdinal("cantidad_padecimientos")) ? 0 : reader.GetInt32("cantidad_padecimientos"),
                            CantidadCitasProcedimientos = reader.IsDBNull(reader.GetOrdinal("cantidad_citas_procedimientos")) ? 0 : reader.GetInt32("cantidad_citas_procedimientos"),
                            CantidadMedicamentos = reader.IsDBNull(reader.GetOrdinal("cantidad_medicamentos")) ? 0 : reader.GetInt32("cantidad_medicamentos"),
                            FechaUltimaCita = reader.IsDBNull(reader.GetOrdinal("fecha_ultima_cita")) ? (DateTime?)null : reader.GetDateTime("fecha_ultima_cita")
                        });
                    }
                }
            }
        }

        // Cerramos la conexión
        conexion.CerrarConexion(connection);
    }
}

<h2>Medicamentos Utilizados por Mes y Año</h2>
<div class="table-section">
    <div class="grid-table">
        <!-- Cabeceras -->
        <div class="grid-header">Medicamento</div>
        <div class="grid-header">Año</div>
        <div class="grid-header">Mes</div>
        <div class="grid-header">Cantidad Utilizada</div>
        <!-- Datos -->
        @foreach (var medicamento in medicamentosUtilizados)
        {
            <div class="grid-item">@medicamento.Medicamento</div>
            <div class="grid-item">@medicamento.Anio</div>
            <div class="grid-item">@medicamento.Mes</div>
            <div class="grid-item">@medicamento.TotalCantidadUtilizada</div>
        }
    </div>
</div>

<h2>Padecimientos por Año</h2>
<div class="table-section">
    <div class="grid-table-padecimiento">
        <!-- Cabeceras -->
        <div class="grid-header">Padecimiento</div>
        <div class="grid-header">Año</div>
        <div class="grid-header">Cantidad de Personas</div>
        <!-- Datos -->
        @foreach (var padecimiento in padecimientosPorAno)
        {
            <div class="grid-item">@padecimiento.Padecimiento</div>
            <div class="grid-item">@padecimiento.Anio</div>
            <div class="grid-item">@padecimiento.CantidadPersonas</div>
        }
    </div>
</div>

<h2>Atenciones por Personal Médico</h2>
<div class="table-section">
    <div class="grid-table-atenciones">
        <!-- Cabeceras -->
        <div class="grid-header">Personal Médico</div>
        <div class="grid-header">Nombre Médico</div>
        <div class="grid-header">Total Citas</div>
        <div class="grid-header">Total Procedimientos</div>
        <div class="grid-header">Total Medicamentos</div>
        <!-- Datos -->
        @foreach (var atencion in atencionesPorPersonal)
        {
            <div class="grid-item">@atencion.PersonalMedico</div>
            <div class="grid-item">@atencion.NombreMedico</div>
            <div class="grid-item">@atencion.TotalCitas</div>
            <div class="grid-item">@atencion.TotalProcedimientos</div>
            <div class="grid-item">@atencion.TotalMedicamentos</div>
        }
    </div>
</div>

<h2>Informe de Pacientes</h2>
<div class="table-section">
    <div class="grid-table-informe">
        <!-- Cabeceras -->
        <div class="grid-header">N° Carnet</div>
        <div class="grid-header">Nombre</div>
        <div class="grid-header">Apellido 1</div>
        <div class="grid-header">Apellido 2</div>
        <div class="grid-header">Teléfono</div>
        <div class="grid-header">Correo</div>
        <div class="grid-header">Sexo</div>
        <div class="grid-header">Cantidad Padecimientos</div>
        <div class="grid-header">Cantidad Citas/Procedimientos</div>
        <div class="grid-header">Cantidad Medicamentos</div>
        <div class="grid-header">Fecha Última Cita</div>
        <!-- Datos -->
        @foreach (var paciente in pacientesInformacion)
        {
            <div class="grid-item">@paciente.Carnet</div>
            <div class="grid-item">@paciente.Nombre</div>
            <div class="grid-item">@paciente.Apellido1</div>
            <div class="grid-item">@paciente.Apellido2</div>
            <div class="grid-item">@paciente.Telefono</div>
            <div class="grid-item">@paciente.Correo</div>
            <div class="grid-item">@paciente.Sexo</div>
            <div class="grid-item">@paciente.CantidadPadecimientos</div>
            <div class="grid-item">@paciente.CantidadCitasProcedimientos</div>
            <div class="grid-item">@paciente.CantidadMedicamentos</div>
            <div class="grid-item">@paciente.FechaUltimaCita?.ToString("yyyy-MM-dd")</div>
        }
    </div>
</div>

<style>
    .grid-table {
        display: grid;
        grid-template-columns: repeat(4, 1fr); /* Ajusta el número de columnas según sea necesario */
        gap: 10px;
        background-color: #f8f8f8;
        padding: 10px;
    }

    .grid-table-padecimiento {
        display: grid;
        grid-template-columns: repeat(3, 1fr); /* Ajusta el número de columnas según sea necesario */
        gap: 10px;
        background-color: #f8f8f8;
        padding: 10px;
    }

    .grid-table-atenciones {
        display: grid;
        grid-template-columns: repeat(5, 1fr); /* Ajusta el número de columnas según sea necesario */
        gap: 10px;
        background-color: #f8f8f8;
        padding: 10px;
    }

    .grid-table-informe {
        display: grid;
        grid-template-columns: repeat(11, 1fr); /* Ajusta el número de columnas según sea necesario */
        gap: 10px;
        background-color: #f8f8f8;
        padding: 10px;
    }

    .grid-header {
        font-weight: bold;
        background-color: #e2e2e2;
        padding: 10px;
        border-bottom: 2px solid #ccc;
    }

    .grid-item {
        padding: 10px;
        border-bottom: 1px solid #ccc;
    }
</style>
